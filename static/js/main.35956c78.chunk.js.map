{"version":3,"sources":["components/section/Section.js","components/container/Container.js","components/title/Title.js","redux/contacts/selectors/contactsSelectors.js","components/button/Button.js","redux/contacts/operations/contactsOperations.js","components/form/Form.js","helpers/constants.js","redux/contacts/filter/contactsFilterReducer.js","components/filter/Filter.js","components/spinner/Spinner.js","components/contacts/Contacts.js","App.js","helpers/logger.js","redux/contacts/items/contactsItemsReducer.js","redux/contacts/loading/contactsLoadingReducer.js","redux/contacts/error/contactsErrorReducer.js","redux/contacts/contactsRootReducer.js","redux/store.js","index.js"],"names":["Section","children","className","SectionWrapper","styled","section","Container","ContainerWrapper","div","Title","title","TitleH2","defaultProps","h2","getItems","state","items","getFilter","filter","isLoading","loading","filteredContacts","memoize","contacts","lowerCaseFilter","toLowerCase","person","name","includes","getFiltredContacts","Button","content","type","handleClick","disabled","ButtonWrapper","onClick","defaultPtops","button","axios","defaults","baseURL","fetchContacts","createAsyncThunk","_","a","rejectWithValue","get","data","addContact","contact","phone","number","id","nanoid","post","deleteContact","delete","Form","useSelector","dispatch","useDispatch","useState","setName","setNumber","handleInputChange","event","currentTarget","value","onReset","MainForm","autoComplete","onSubmit","preventDefault","dataContacts","isContactValid","contactName","contactNumber","some","alert","validateContact","FormLabel","FormInput","placeholder","onChange","pattern","required","minLength","maxLength","form","label","input","addFilter","createAction","createReducer","payload","Filter","Label","Span","Input","p","span","Spinner","heigth","width","color","ariaLabel","Contacts","map","ListItem","li","App","useEffect","logger","createLogger","predicate","process","colors","action","prevState","nextState","error","fulfilled","pending","rejected","combineReducers","middleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","devTools","getDefaultMiddleware","concat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.35956c78.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport styled from 'styled-components';\nexport default function Section({ children, className }) {\n  return <SectionWrapper className={className}>{children}</SectionWrapper>;\n}\nSection.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node,\n};\nexport const SectionWrapper = styled.section`\n  padding: 0 20px;\n  margin: 0;\n`;\n","import PropTypes from 'prop-types';\nimport styled from 'styled-components';\nexport default function Container({ children, className }) {\n  return <ContainerWrapper className={className}>{children}</ContainerWrapper>;\n}\nContainer.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node,\n};\nexport const ContainerWrapper = styled.div`\n  padding: 0 10px;\n  margin: 0 auto;\n`;\n","import PropTypes from 'prop-types';\nimport styled from 'styled-components';\nexport default function Title({ title, className }) {\n  return <TitleH2 className={className}>{title}</TitleH2>;\n}\nTitle.defaultProps = {\n  title: 'Section title',\n};\nTitle.propTypes = {\n  className: PropTypes.string,\n  title: PropTypes.string,\n};\nexport const TitleH2 = styled.h2`\n  color: var(--yellow);\n  font-size: 32px;\n  font-family: var(--big);\n  text-align: center;\n`;\n","import memoize from 'memoizee';\n\nexport const getItems = state => state.items;\nexport const getFilter = state => state.filter;\nexport const isLoading = state => state.loading;\n\nexport const filteredContacts = memoize(state => {\n  const contacts = getItems(state);\n  const filter = getFilter(state);\n\n  const getFiltredContacts = contacts => {\n    const lowerCaseFilter = filter.toLowerCase();\n    return contacts.filter(person =>\n      person.name.toLowerCase().includes(lowerCaseFilter),\n    );\n  };\n  return getFiltredContacts(contacts);\n});\n","import styled from 'styled-components';\n\nexport default function Button({ content, type, handleClick, disabled }) {\n  return (\n    <ButtonWrapper type={type} onClick={handleClick} disabled={disabled}>\n      {content}\n    </ButtonWrapper>\n  );\n}\nButton.defaultPtops = {\n  type: 'button',\n  disabled: true,\n};\nconst ButtonWrapper = styled.button`\n  border: 1px solid rgb(255, 252, 252);\n  border-radius: 10px;\n  box-shadow: 0.7px 0.7px 0.75px rgb(173, 172, 172);\n  background-color: rgb(245, 250, 245);\n  font-size: 14px;\n  font-weight: 600;\n  transition: all 250ms ease-in;\n  font-family: var(--font);\n  :hover {\n    cursor: pointer;\n    color: var(--white);\n  }\n`;\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { nanoid } from 'nanoid';\n\naxios.defaults.baseURL = 'https://61e6b687ce3a2d001735938f.mockapi.io/api';\n\nexport const fetchContacts = createAsyncThunk(\n  'contacts/fetch',\n  async (_, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.get('/contacts');\n      return data;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  },\n);\n\nexport const addContact = createAsyncThunk(\n  'contacts/add',\n  async (person, { rejectWithValue }) => {\n    const contact = {\n      name: person.name,\n      phone: person.number,\n      id: nanoid(),\n    };\n    try {\n      await axios.post('/contacts', contact);\n      return contact;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  },\n);\n\nexport const deleteContact = createAsyncThunk(\n  'contacts/delete',\n  async (id, { rejectWithValue }) => {\n    try {\n      await axios.delete(`/contacts/${id}`);\n      return id;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  },\n);\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getItems } from '../../redux/contacts/selectors/contactsSelectors';\nimport styled from 'styled-components';\nimport Section from '../section';\nimport Container from '../container';\nimport Title from '../title';\nimport Button from '../button';\nimport { NAME, NUMBER } from '../../helpers/constants';\nimport { addContact } from '../../redux/contacts/operations/contactsOperations';\n// import { addContact } from '../../redux/contacts-vanila/contact-operations';\n\nexport default function Form() {\n  const contacts = useSelector(getItems);\n  const dispatch = useDispatch();\n  const onSubmit = (name, number) => dispatch(addContact(name, number));\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const validateContact = (contactName, contactNumber, contacts) => {\n    if (contacts.some(({ name }) => name === contactName)) {\n      alert(`\"${contactName}\" is already in contacts!`);\n      return false;\n    } else if (contacts.some(({ number }) => number === contactNumber)) {\n      alert(`\"${contactNumber}\" is already in contacts!`);\n      return false;\n    } else return true;\n  };\n\n  const handleInputChange = event => {\n    const { name, value } = event.currentTarget;\n    if (name === NAME) setName(value);\n    if (name === NUMBER) setNumber(value);\n  };\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    const dataContacts = { name, number };\n    const isContactValid = validateContact(name, number, contacts);\n    if (isContactValid) {\n      onSubmit(dataContacts);\n      onReset();\n    }\n  };\n\n  const onReset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Section>\n      <Container>\n        <Title title=\"Phonebook\" />\n        <MainForm autoComplete=\"off\" onSubmit={handleFormSubmit}>\n          <FormLabel>\n            Name\n            <FormInput\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              placeholder=\"Enter fullname\"\n              onChange={handleInputChange}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n            />\n          </FormLabel>\n          <FormLabel>\n            Number\n            <FormInput\n              type=\"tel\"\n              name=\"number\"\n              value={number}\n              placeholder=\"Enter phone number\"\n              onChange={handleInputChange}\n              minLength=\"7\"\n              maxLength=\"17\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n            />\n          </FormLabel>\n          <Button\n            content=\"Add contact\"\n            type=\"submit\"\n            disabled={name === '' || number === ''}\n          />\n        </MainForm>\n      </Container>\n    </Section>\n  );\n}\nexport const MainForm = styled.form`\n  padding: 5px;\n  margin: 0 auto;\n  width: 250px;\n  font-family: var(--font);\n  button {\n    margin: 0;\n    width: 100%;\n    padding: 5px 20px;\n    :hover {\n      background-color: var(--green);\n      border: 1px solid var(--blue);\n    }\n    :disabled:hover {\n      cursor: not-allowed;\n      color: var(--red);\n      background-color: var(--white);\n      border: 1px solid var(--red);\n    }\n  }\n`;\nexport const FormLabel = styled.label`\n  margin: 0 0 2px 0;\n  font-family: var(--font);\n  font-size: 18px;\n  font-weight: 600;\n`;\nexport const FormInput = styled.input`\n  padding: 5px 20px;\n  margin-bottom: 20px;\n  width: 100%;\n  border-radius: 10px;\n`;\n","export const NAME = 'name';\nexport const NUMBER = 'number';\n","import { createAction, createReducer } from '@reduxjs/toolkit';\n\nexport const addFilter = createAction('contacts/addFilter');\n\nexport const filter = createReducer('', {\n  [addFilter]: (_, { payload }) => payload,\n});\n","import styled from 'styled-components';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux/contacts/selectors/contactsSelectors';\nimport { addFilter } from '../../redux/contacts/filter/contactsFilterReducer';\n// import { addFilter } from '../../redux/contacts-vanila/contact-actions';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const value = useSelector(getFilter);\n  const onChange = event => dispatch(addFilter(event.currentTarget.value));\n  return (\n    <Label>\n      <Title>\n        Find contacts by <Span>name</Span>\n      </Title>\n      <Input type=\"search\" name=\"search\" value={value} onChange={onChange} />\n    </Label>\n  );\n}\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nexport const Title = styled.p`\n  margin: 5px 0;\n  color: var(--white);\n  font-family: var(--font);\n  font-size: 18px;\n  line-height: 1.5;\n`;\nexport const Span = styled.span`\n  color: var(--yellow);\n`;\nexport const Input = styled.input`\n  color: var(--blue);\n`;\n","import React from 'react';\nimport { Bars } from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport './Spinner.css';\nexport default function Spinner() {\n  return (\n    <div className=\"loader-box\">\n      <Bars heigth=\"100\" width=\"100\" color=\"#f6f4f3\" ariaLabel=\"loading\" />\n    </div>\n  );\n}\n","import styled from 'styled-components';\nimport Button from '../button';\nimport Spinner from '../spinner/Spinner';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  filteredContacts,\n  isLoading,\n} from '../../redux/contacts/selectors/contactsSelectors';\nimport { deleteContact } from '../../redux/contacts/operations/contactsOperations';\n// import { deleteContact } from '../../redux/contacts-vanila/contact-operations';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(filteredContacts);\n  const loading = useSelector(isLoading);\n  return (\n    <>\n      {loading && <Spinner />}\n      <ul>\n        {contacts.map(person => (\n          <ListItem key={person.id}>\n            {person.name} : {person.phone}\n            <Button\n              content=\"Delete\"\n              handleClick={() => dispatch(deleteContact(person.id))}\n            />\n          </ListItem>\n        ))}\n      </ul>\n    </>\n  );\n}\nexport const ListItem = styled.li`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  list-style: circle;\n  align-items: baseline;\n  width: 350px;\n  padding: 5px;\n  font-family: var(--font);\n  font-size: 18px;\n  line-height: 1.5;\n  ::before {\n    content: '';\n    display: block;\n    height: 7px;\n    width: 7px;\n    background-color: var(--yellow);\n    border-radius: 50%;\n  }\n  button {\n    margin: 5px 0 5px 10px;\n    padding: 3px 10px 3px 10px;\n    :hover {\n      background-color: var(--blue);\n      border: 1px solid var(--dark);\n    }\n  }\n`;\n","import Section from './components/section';\nimport Container from './components/container';\nimport Title from './components/title';\nimport Form from './components/form';\nimport Filter from './components/filter';\nimport Contacts from './components/contacts';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from './redux/contacts/operations/contactsOperations';\n// import { fetchContacts } from './redux/contacts-vanila/contact-operations';\n\nexport default function App() {\n  const dispatch = useDispatch();\n  useEffect(() => dispatch(fetchContacts()), [dispatch]);\n  return (\n    <>\n      <Form />\n      <Section>\n        <Container>\n          <Title title=\"Contacts\" />\n          <Filter />\n          <Contacts />\n        </Container>\n      </Section>\n    </>\n  );\n}\n\n/*\n how to switch between thunk/vanilla:\n re comment imports in the files:\n src/App.js\n src/components/Contacts.js\n src/components/Form.js\n src/components/Filter.js\nsrc/redux/store.js\n */\n","import { createLogger } from 'redux-logger';\n\nconst logger = createLogger({\n  predicate: () => process.env.NODE_ENV !== 'production',\n  colors: {\n    title: action => 'orange',\n    prevState: prevState => 'cyan',\n    action: action => 'violet',\n    nextState: nextState => 'lawngreen',\n    error: (error, prevState) => 'red',\n  },\n});\n\nexport default logger;\n","import { createReducer } from '@reduxjs/toolkit';\nimport {\n  addContact,\n  deleteContact,\n  fetchContacts,\n} from '../operations/contactsOperations';\n\nexport const items = createReducer([], {\n  [fetchContacts.fulfilled]: (_, { payload }) => payload,\n  [addContact.fulfilled]: (state, { payload }) => [payload, ...state],\n  [deleteContact.fulfilled]: (state, { payload }) =>\n    state.filter(contact => contact.id !== payload),\n});\n","import { createReducer } from '@reduxjs/toolkit';\nimport {\n  fetchContacts,\n  addContact,\n  deleteContact,\n} from '../operations/contactsOperations';\n\nexport const loading = createReducer(false, {\n  [fetchContacts.pending]: () => true,\n  [fetchContacts.fulfilled]: () => false,\n  [fetchContacts.rejected]: () => false,\n  [addContact.pending]: () => true,\n  [addContact.fulfilled]: () => false,\n  [addContact.rejected]: () => false,\n  [deleteContact.pending]: () => true,\n  [deleteContact.fulfilled]: () => false,\n  [deleteContact.rejected]: () => false,\n});\n","import { createReducer } from '@reduxjs/toolkit';\nexport const error = createReducer(null, {});\n","import { combineReducers } from '@reduxjs/toolkit';\r\nimport { items } from './items/contactsItemsReducer';\r\nimport { filter } from './filter/contactsFilterReducer';\r\nimport { loading } from './loading/contactsLoadingReducer';\r\nimport { error } from './error/contactsErrorReducer';\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n  error,\r\n});\r\n","import {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport { configureStore } from '@reduxjs/toolkit';\nimport logger from '../helpers/logger';\nimport reducer from './contacts/contactsRootReducer';\n// import reducer from './contacts-vanila/contact-reducer';\n\nconst middleware = {\n  serializableCheck: {\n    ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n  },\n};\n\nconst store = configureStore({\n  reducer,\n  devTools: process.env.NODE_ENV === 'development',\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware(middleware).concat(logger),\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}